You are given an array of strings =tokens= that represents an arithmetic expression in a [[http://en.wikipedia.org/wiki/Reverse_Polish_notation][Reverse Polish Notation]].

Evaluate the expression. Return /an integer that represents the value of the expression/.

*Note* that:

- The valid operators are ='+'=, ='-'=, ='*'=, and ='/'=.
- Each operand may be an integer or another expression.
- The division between two integers always *truncates toward zero*.
- There will not be any division by zero.
- The input represents a valid arithmetic expression in a reverse polish notation.
- The answer and all the intermediate calculations can be represented in a *32-bit* integer.



*Example 1:*

#+begin_example
Input: tokens = ["2","1","+","3","*"]
Output: 9
Explanation: ((2 + 1) * 3) = 9
#+end_example

*Example 2:*

#+begin_example
Input: tokens = ["4","13","5","/","+"]
Output: 6
Explanation: (4 + (13 / 5)) = 6
#+end_example

*Example 3:*

#+begin_example
Input: tokens = ["10","6","9","3","+","-11","*","/","*","17","+","5","+"]
Output: 22
Explanation: ((10 * (6 / ((9 + 3) * -11))) + 17) + 5
= ((10 * (6 / (12 * -11))) + 17) + 5
= ((10 * (6 / -132)) + 17) + 5
= ((10 * 0) + 17) + 5
= (0 + 17) + 5
= 17 + 5
= 22
#+end_example



*Constraints:*

- =1 <= tokens.length <= 10=^{=4=}
- =tokens[i]= is either an operator: ="+"=, ="-"=, ="*"=, or ="/"=, or an integer in the range =[-200, 200]=.

#+begin_src ruby
#include <vector>
#include <string>
#include <stack>

int evalRPN(std::vector<std::string>& tokens) {
    std::stack<int> stk;

    for (const auto& token : tokens) {
        if (token == "+" || token == "-" || token == "*" || token == "/") {
            int b = stk.top(); stk.pop();
            int a = stk.top(); stk.pop();
            int result = 0;
            if (token == "+") result = a + b;
            else if (token == "-") result = a - b;
            else if (token == "*") result = a * b;
            else if (token == "/") result = a / b;
            stk.push(result);
        } else {
            stk.push(std::stoi(token));
        }
    }

    return stk.top();
}
#+end_src

--------------

https://leetcode.cn/problems/evaluate-reverse-polish-notation/?envType=study-plan-v2&envId=top-interview-150
