Given two integer arrays =inorder= and =postorder= where =inorder= is the inorder traversal of a binary tree and =postorder= is the postorder traversal of the same tree, construct and return /the binary tree/.



*Example 1:*

[[https://assets.leetcode.com/uploads/2021/02/19/tree.jpg]]

#+begin_example
Input: inorder = [9,3,15,20,7], postorder = [9,15,7,20,3]
Output: [3,9,20,null,null,15,7]
#+end_example

*Example 2:*

#+begin_example
Input: inorder = [-1], postorder = [-1]
Output: [-1]
#+end_example



*Constraints:*

- =1 <= inorder.length <= 3000=
- =postorder.length == inorder.length=
- =-3000 <= inorder[i], postorder[i] <= 3000=
- =inorder= and =postorder= consist of *unique* values.
- Each value of =postorder= also appears in =inorder=.
- =inorder= is *guaranteed* to be the inorder traversal of the tree.
- =postorder= is *guaranteed* to be the postorder traversal of the tree.

--------------
#+begin_src ruby
class TreeNode
  attr_accessor :val, :left, :right
  def initialize(val = 0, left = nil, right = nil)
    @val = val
    @left = left
    @right = right
  end
end

def build_tree(inorder, postorder)
  return nil if inorder.empty?

  root_val = postorder.pop
  root = TreeNode.new(root_val)
  root_index = inorder.index(root_val)

  root.right = build_tree(inorder[root_index + 1..-1], postorder)
  root.left = build_tree(inorder[0...root_index], postorder)

  root
end
#+end_src
https://leetcode.cn/problems/construct-binary-tree-from-inorder-and-postorder-traversal/?envType=study-plan-v2&envId=top-interview-150
