Given =n= non-negative integers representing an elevation map where the width of each bar is =1=, compute how much water it can trap after raining.



*Example 1:*

[[https://assets.leetcode.com/uploads/2018/10/22/rainwatertrap.png]]

#+begin_example
Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.
#+end_example

*Example 2:*

#+begin_example
Input: height = [4,2,0,3,2,5]
Output: 9
#+end_example



*Constraints:*

- =n == height.length=
- =1 <= n <= 2 * 10=^{=4=}
- =0 <= height[i] <= 10=^{=5=}


#+begin_src ruby
def trapped_water(height)
  left_max, right_max = Array.new(height.size, 0), Array.new(height.size, 0)
  left_max[0], right_max[-1] = height[0], height[-1]

  1.upto(height.size - 1) { |i| left_max[i] = [left_max[i - 1], height[i]].max }
  (height.size - 2).downto(0) { |i| right_max[i] = [right_max[i + 1], height[i]].max }

  trapped = 0
  height.each_with_index { |h, i| trapped += [left_max[i], right_max[i]].min - h }
  trapped
end

#+end_src
--------------

https://leetcode.cn/problems/trapping-rain-water/description/?envType=study-plan-v2&envId=top-interview-150
