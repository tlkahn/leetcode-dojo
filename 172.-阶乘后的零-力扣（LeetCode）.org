Given an integer =n=, return /the number of trailing zeroes in/ =n!=.

Note that =n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1=.

 

*Example 1:*

#+begin_example
Input: n = 3
Output: 0
Explanation: 3! = 6, no trailing zero.
#+end_example

*Example 2:*

#+begin_example
Input: n = 5
Output: 1
Explanation: 5! = 120, one trailing zero.
#+end_example

*Example 3:*

#+begin_example
Input: n = 0
Output: 0
#+end_example

 

*Constraints:*

- =0 <= n <= 10=^{=4=}

 

*Follow up:* Could you write a solution that works in logarithmic time complexity?

--------------

https://leetcode.cn/problems/factorial-trailing-zeroes/description/?envType=study-plan-v2&envId=top-interview-150
